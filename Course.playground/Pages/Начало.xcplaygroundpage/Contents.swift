//: ## Калькулятор
//: Мы можем использовать playground как интерактивный калькулятор.

5 + 6

1.2 + 1.1

(4+5)-2

65.5 * 99

//: Целые и дробные числа компилятор воспринимает по-разному.

33

33.0

//: Для целых чисел применяется целочисленоое деление.

33 / 2

33.0 / 2

//: Команда `let` устанавливает связь между именем и значением.
//: Имя можно писать в любом алфавите!

let стоимость_в_€ = 499.99 // Alt + Shift + 2 ⌥⇧2 
let курс_€к₽ = 65.5
let стоимость_в_₽ = стоимость_в_€ * курс_€к₽


//: ## Типы в Swift
//: Массивы определяются с помощью квадратных скобок.

[5, 6, 7]

//: У них есть своя операция сложения (но нет вычитания или деления!)

let numbers = [56, 22, 31] + [40]


//: ## Типы 
//: Каждое значение в Swift имеет определенный тип, который можн указать явно
let Целый: Int = 33
let Дробный: Double = 33.5

//: Массив должен быть однородным 
let Массив_целых: [Int] = [Целый, 2, Целый]
let Массив_дробных: [Double] = [Дробный, 2, Дробный]


//: ## Функции 
//: Для определения функции используются ключевые слова `func` и `return`.
//: Надо знать заранее тип.

func удвоить(number: Int) -> Int {
    return number * 2
}

func квадрат(number: Int) -> Int {
    return number * number
}


//: Можно применять функции: математическая нотация f(x) 
удвоить(10)
квадрат(15)

//: Оператор `import` делается только один раз
import Foundation

//: Напомним про тригонометрические функции
sin(M_PI_2)
cos(M_PI_2)

//: Если повернуть вектор (10, 0) влево на π/4
let новый_х = 10 * cos(M_PI / 4)
let новый_y = 10 * sin(M_PI / 4)
let Длина_вектора = sqrt(новый_х * новый_х + новый_y * новый_y)

//: Использование объектной нотации
//: Функция – это глагол в S-V-O 
numbers.sort()
let sorted = numbers.sort()

numbers.maxElement()
numbers.minElement()

//: ## Использование `map`-`reduce`

numbers.map(удвоить).map(квадрат)


let sum = numbers.reduce(0, combine: +)
numbers.reduce(1, combine: *)

let sorted_sum = sorted.reduce(0, combine: +)
sorted.reduce(1, combine: *)

//: ## Нечисловые типы

//: Значения `true` и `false`
5 == 6
7 == 7
2 + 2 == 4

numbers.isEmpty
true == true
false == false
true == false

//: Вместе называются тип Bool
let правда:Bool = 5 * 5 == 25
let ложь:Bool = numbers.contains(25)


//: Строки определяются с помощью `"`

"Много" + "Букв"


